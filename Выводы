1. Значение пути переменной в .env должно было быть без кавычек
2. Host базы данных вместо localhost нужно заменить на название контейнера.
3. Если npx prisma generate запускать на локальной машине, то контейнер это не увидит, т. к. у него СВОЙ node_modules, несмотря на то,
что мы добавили в volume ВСЁ приложение. Мы добавили ВСЁ, но не файлы и папки в .dockerignore Поэтому, он не следит за ними.
4. В докер контейнере можно замапить несколько портов.
//Почему то падал npm i при сборке докера с ERR_SOCKET_TIMEOUT. В итоге починилось, но так и не понял как
5. В Dockerfile может быть только одна CMD, нужно делать так:
    CMD /etc/init.d/nullmailer start ; /usr/sbin/php5-fpm
    CMD ["sh", "-c", "/etc/init.d/nullmailer start ; /usr/sbin/php5-fpm"]

    удобнее завести рядом start.sh  там нормально расписать все необходимые команды, а в Dockerfile его запустить:
    CMD ["start.sh"]
    В самом начале .sh скрипта нужно писать: #!/bin/bash
    это shebang он сообщает оболочке с какой програмной интерпретировать скрипт.
    //Но это тоже не сработало, т. к. внутри контейнера не находиться команда npm. Такую проблему не решил.

    В итоге завёл в package.json скрипт:
    "docker-dev": "npx prisma generate && npx prisma studio && npm run dev"

6. Основные команды Dockerfile: https://dev.to/soutoigor/dockerfile-main-commands-and-instructions-2l2h
    В dockerfile может быть только
//pgdata рендериться в корневой папке ЛОКАЛЬНО. И там сохраняются данные базы даннах. Поэтому удалять её не нужно. НО как тогда получить
к ней доступ, ведь при запуске нового контейнера насколько помню выходит ошибка?

7. Анонимные volume нужны для кейса, когда мы добавили ОБЩИЙ volume и хотим, чтобы при изменения одной внутренней папки в контейнер неподгружались. Пример:
       Добавили volume на всё приложение
       Добавили анонимный volume на node_modules, чтобы при локальных изменениях node_modules они не подгружались в контейнер.

8. Суть volume-ов -- это обмен ОБЩИМИ данными между несколькими контейнерами. Иногда их ещё используют для dev-сборки, чтобы при локальных изменениях
    всё дело подтягивалось в docker.

9. docker exec -it <mycontainer> bash -- чтобы зайти внутрь запущенного контейнера

10. sudo ss -tulwn | grep LISTEN -- зволяет посмотреть активные порты
    kill $(lsof -t -i:8080) -- удаляет процессы, которые возвращает команда lsof

11. "npx prisma generate && npx prisma studio & npm run dev" -- во втором случае один &, чтобы запустить команды параллельно
    В этом кейсе это требуется, т. к. иначе npm run devбудет запущен только после того, как выключу сервер studio.

12. createPrimitiveAtom и аналогичные creater`ы нужно импортрировать из общей папки '@reatom/core/primitives', а не
        из конкретного файла'@reatom/core/primitives/createPrimitiveAtom' и подобных